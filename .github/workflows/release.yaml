name: Release
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - "main"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
    GetLatestVersions:
        runs-on: ubuntu-latest
        outputs:
          FIREFOX_VERSION: ${{ steps.versions.outputs.FIREFOX_VERSION }}
          NUGET_PACKAGE_VERSION: ${{ steps.versions.outputs.NUGET_PACKAGE_VERSION }}
        steps:
        - uses: actions/checkout@v3.5.3
    
        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '8.x'
    
        - name: Run Version Manager
          id: versions
          run: dotnet run -c Release --project packages/nuget/PortableFirefox/PortableFirefox.VersionManager
          env:
            PATCH_VERSION_SUFFIX: '12'

    VerifyTagExists:
        needs:
        - GetLatestVersions
        runs-on: ubuntu-latest
        outputs:
          exists: ${{ steps.checkReleaseExists.outputs.exists }}
        env:
          NUGET_PACKAGE_VERSION: ${{ needs.GetLatestVersions.outputs.NUGET_PACKAGE_VERSION }}
        steps:
        - uses: mukunku/tag-exists-action@v1.3.0
          id: checkReleaseExists
          with: 
            tag: v${{ env.NUGET_PACKAGE_VERSION }}

    Archive-OSX:
        needs:
        - GetLatestVersions
        - VerifyTagExists
        if: ${{ needs.VerifyTagExists.outputs.exists == 'false' }}
        runs-on: macos-latest
        env:
          FIREFOX_VERSION: ${{ needs.GetLatestVersions.outputs.FIREFOX_VERSION }}
        steps:
        - uses: actions/checkout@v3.5.3

        - name: Build Archive
          run: ./BuildOSX.sh

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: portable-firefox-macos
            path: tmp/portable-firefox-macos-${{ env.FIREFOX_VERSION }}.tar.gz

    Archive-Linux64:
        needs:
        - GetLatestVersions
        - VerifyTagExists
        if: ${{ needs.VerifyTagExists.outputs.exists == 'false' }}
        runs-on: ubuntu-latest
        env:
          FIREFOX_VERSION: ${{ needs.GetLatestVersions.outputs.FIREFOX_VERSION }}
        steps:
        - uses: actions/checkout@v3.5.3

        - name: Build archive
          run: |
            set -e

            docker build . -f Dockerfile.BuildLinux -t portable-firefox-linux64:latest
            docker create --name portable-firefox-linux64 portable-firefox-linux64:latest
            docker cp portable-firefox-linux64:/firefox.tar.gz portable-firefox-linux64-${FIREFOX_VERSION}.tar.gz

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: portable-firefox-linux64
            path: portable-firefox-linux64-${{ env.FIREFOX_VERSION }}.tar.gz

    Release:
        needs:
        - GetLatestVersions
        - Archive-OSX
        - Archive-Linux64
        runs-on: ubuntu-latest
        env:
          FIREFOX_VERSION: ${{ needs.GetLatestVersions.outputs.FIREFOX_VERSION }}
          NUGET_PACKAGE_VERSION: ${{ needs.GetLatestVersions.outputs.NUGET_PACKAGE_VERSION }}
        steps:
        - uses: actions/checkout@v3.5.3

        - uses: actions/download-artifact@v4
          with:
            name: portable-firefox-macos
            path: portable-firefox-macos

        - uses: actions/download-artifact@v4
          with:
            name: portable-firefox-linux64
            path: portable-firefox-linux64

        - uses: "marvinpinto/action-automatic-releases@v1.2.1"
          with:
            title: Firefox v${{ env.NUGET_PACKAGE_VERSION }}
            automatic_release_tag: v${{ env.NUGET_PACKAGE_VERSION }}
            prerelease: false
            draft: false 
            files: |
              portable-firefox-macos/portable-firefox-macos-${{ env.FIREFOX_VERSION }}.tar.gz
              portable-firefox-linux64/portable-firefox-linux64-${{ env.FIREFOX_VERSION }}.tar.gz
            repo_token: "${{ secrets.GITHUB_TOKEN }}"

        - name: Replace Versions
          run: |
            set -e
            sed 's/$(FirefoxVersion)/${{ env.FIREFOX_VERSION }}/g' -i packages/nuget/PortableFirefox/PortableFirefox/PortableFirefox.csproj
            sed 's/$(Version)/${{ env.NUGET_PACKAGE_VERSION }}/g' -i packages/nuget/PortableFirefox/PortableFirefox/build/PortableFirefox.targets

        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 6.x

        - name: Pack
          working-directory: packages/nuget/PortableFirefox
          run: dotnet pack PortableFirefox --configuration Release

        - name: Publish nuget
          working-directory: packages/nuget/PortableFirefox
          run: dotnet nuget push PortableFirefox/bin/Release/PortableFirefox.*.nupkg -k ${{secrets.NUGET_API_KEY}} -s https://www.nuget.org --skip-duplicate
