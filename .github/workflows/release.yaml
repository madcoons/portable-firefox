name: Release
on:
#   schedule:
#     - cron: "5 */12 * * *"
  push:
    branches:
      - "main"
jobs:
    Release:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v3.5.3

        - name: Build linux64 archive
          run: |
            set -e

            docker build . -f Dockerfile.BuildLinux -t portable-firefox:latest
            VERSION=$(docker run --rm portable-firefox:latest --version)
            VERSION_NUMBER=$(echo ${VERSION} | sed 's/Mozilla Firefox //g' | sed 's/\r//')
            docker create --name portable-firefox portable-firefox:latest
            docker cp portable-firefox:/firefox.tar.gz portable-firefox-linux64-${VERSION_NUMBER}.tar.gz
            echo "VERSION_NUMBER=${VERSION_NUMBER}" >> $GITHUB_ENV

        - uses: "marvinpinto/action-automatic-releases@latest"
          with:
            title: Firefox v${{ env.VERSION_NUMBER }}
            automatic_release_tag: v${{ env.VERSION_NUMBER }}
            prerelease: false
            draft: false 
            files: |
              portable-firefox-linux64-${{ env.VERSION_NUMBER }}.tar.gz
            repo_token: "${{ secrets.GITHUB_TOKEN }}"

        - name: Replace FirefoxVersion
          run: |
            set -e
            sed 's/$(FirefoxVersion)/${{ env.VERSION_NUMBER }}/g' -i packages/nuget/PortableFirefox/PortableFirefox/PortableFirefox.csproj
            sed 's/$(FirefoxVersion)/${{ env.VERSION_NUMBER }}/g' -i packages/nuget/PortableFirefox/PortableFirefox/build/PortableFirefox.targets

        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 7.0.x

        - name: Pack
          working-directory: packages/nuget/PortableFirefox
          run: dotnet pack PortableFirefox --configuration Release

        - name: Publish nuget
          working-directory: packages/nuget/PortableFirefox
          run: dotnet nuget push PortableFirefox/bin/Release/PortableFirefox.*.nupkg -k ${{secrets.NUGET_API_KEY}} -s https://www.nuget.org --skip-duplicate
